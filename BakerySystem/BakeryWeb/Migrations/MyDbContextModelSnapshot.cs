// <auto-generated />
using System;
using BakeryWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BakeryWeb.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BakeryWeb.Domain.Models.BakingGood", b =>
                {
                    b.Property<int?>("BakingGoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("BakingGoodId"));

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("BakingGoodId");

                    b.HasIndex("OrderId");

                    b.ToTable("BakingGoods");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.Batch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"));

                    b.Property<string>("BatchNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TargetFinishTime")
                        .HasColumnType("datetime2");

                    b.HasKey("BatchId");

                    b.HasIndex("IngredientId");

                    b.ToTable("Batchs");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.BatchIngredient", b =>
                {
                    b.Property<int>("BatchIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchIngredientId"));

                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientQuantity")
                        .HasColumnType("int");

                    b.HasKey("BatchIngredientId");

                    b.HasIndex("BatchId");

                    b.HasIndex("IngredientId");

                    b.ToTable("BatchIngredients");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.DispatchSheet", b =>
                {
                    b.Property<int?>("DispatchSheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("DispatchSheetId"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("PacketId")
                        .HasColumnType("int");

                    b.Property<string>("Route")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DispatchSheetId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PacketId");

                    b.ToTable("DispatchSheets");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("BakingGoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SupermarketId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("SupermarketId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.Packet", b =>
                {
                    b.Property<int?>("PacketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PacketId"));

                    b.Property<int?>("BakingGoodId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PacketId");

                    b.HasIndex("BakingGoodId");

                    b.HasIndex("OrderId");

                    b.ToTable("Packets");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.Supermarket", b =>
                {
                    b.Property<int?>("SupermarketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("SupermarketId"));

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupermarketId");

                    b.ToTable("Supermarkets");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.BakingGood", b =>
                {
                    b.HasOne("BakeryWeb.Domain.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.Batch", b =>
                {
                    b.HasOne("BakeryWeb.Domain.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.BatchIngredient", b =>
                {
                    b.HasOne("BakeryWeb.Domain.Models.Batch", "Batch")
                        .WithMany()
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BakeryWeb.Domain.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.DispatchSheet", b =>
                {
                    b.HasOne("BakeryWeb.Domain.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("BakeryWeb.Domain.Models.Packet", "Packet")
                        .WithMany()
                        .HasForeignKey("PacketId");

                    b.Navigation("Order");

                    b.Navigation("Packet");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.Order", b =>
                {
                    b.HasOne("BakeryWeb.Domain.Models.Supermarket", "Supermarket")
                        .WithMany()
                        .HasForeignKey("SupermarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supermarket");
                });

            modelBuilder.Entity("BakeryWeb.Domain.Models.Packet", b =>
                {
                    b.HasOne("BakeryWeb.Domain.Models.BakingGood", "BakingGood")
                        .WithMany()
                        .HasForeignKey("BakingGoodId");

                    b.HasOne("BakeryWeb.Domain.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("BakingGood");

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
